(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[3123],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return m}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=u(n),m=i,h=c["".concat(o,".").concat(m)]||c[m]||p[m]||r;return n?a.createElement(h,s(s({ref:t},d),{},{components:n})):a.createElement(h,s({ref:t},d))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=c;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l.mdxType="string"==typeof e?e:i,s[1]=l;for(var u=2;u<r;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4099:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return l},metadata:function(){return o},toc:function(){return u},default:function(){return p}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),s=["components"],l={title:"Tutorial 4: Sending emails and text messages",description:"Configuring AuthGuard to send emails and text messages directly",slug:"tutorial-email-sms",tags:["tutorial"],hide_table_of_contents:!1},o={permalink:"/blog/tutorial-email-sms",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/blog/blog/2021-12-13-sending-emails-sms.md",source:"@site/blog/2021-12-13-sending-emails-sms.md",title:"Tutorial 4: Sending emails and text messages",description:"Configuring AuthGuard to send emails and text messages directly",date:"2021-12-13T00:00:00.000Z",formattedDate:"December 13, 2021",tags:[{label:"tutorial",permalink:"/blog/tags/tutorial"}],readingTime:4.6,truncated:!0,nextItem:{title:"Tutorial 3: Social login with OpenID Connect",permalink:"/blog/tutorial-oidc"}},u=[{value:"Prerequisites",id:"prerequisites",children:[]},{value:"Scenario",id:"scenario",children:[]},{value:"Test Setup",id:"test-setup",children:[]},{value:"Plugins Overview",id:"plugins-overview",children:[]},{value:"AuthGuard Configuration",id:"authguard-configuration",children:[{value:"Event Message Bus",id:"event-message-bus",children:[]},{value:"External Communication Channel",id:"external-communication-channel",children:[]},{value:"JavaMail Plugin",id:"javamail-plugin",children:[]}]},{value:"Test Email",id:"test-email",children:[]},{value:"Using Third-Party API",id:"using-third-party-api",children:[]},{value:"Text Messages",id:"text-messages",children:[]}],d={toc:u};function p(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"At some point, as part of your user authentication and registration\nprocess, you will want to send emails and/or text messages.\nWhether it is for One-Time Passwords, magic login links, or\nverification links. AuthGuard can easily be configured to\nsend emails and text messages to users directly. Alternatively,\nyou can also use a message bus bridge to handle sending them\noutside of AuthGuard but that is outside the scope of this\ntutorial."),(0,r.kt)("p",null,"In this tutorial, we will configure an AuthGuard distribution\nto make it send emails to users using an SMTP server. At the\nend we will also show an example of using a REST API instead\nof SMTP, as well as using SMS. "),(0,r.kt)("h2",{id:"prerequisites"},"Prerequisites"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"A standard AuthGuard distribution or a custom distribution\nwith the email extension.")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Follow the guideline for the ",(0,r.kt)("a",{parentName:"p",href:"/docs/setup"},"server setup"),"."))),(0,r.kt)("h2",{id:"scenario"},"Scenario"),(0,r.kt)("p",null,"There are multiple scenarios where you would want to send emails\nto users. However, for this tutorial we will only cover passwordless\nlogin as an example. The same steps also apply to other scenarios\nas well."),(0,r.kt)("h2",{id:"test-setup"},"Test Setup"),(0,r.kt)("p",null,"We are not going to set up an SMTP server ourselves, and instead\nwe will use SendGrid SMTP relay. If you wish to just test locally,\nyou can use a GreenMail server, or Python built-in ",(0,r.kt)("inlineCode",{parentName:"p"},"smtpd")," server."),(0,r.kt)("p",null,"Since we are using SendGrid, we will need an API key. Refer to\nSendGrid's own documentation to learn how to obtain one."),(0,r.kt)("h2",{id:"plugins-overview"},"Plugins Overview"),(0,r.kt)("p",null,"There are two plugins needed for this tutorial: the email plugin,\nand the JavaMail pluing. The email plugin will add the subscribers\nwhich will read the events and call an email provider to send emails.\nThe JavaMail plugin is the email provider which will take care\nof sending emails. JavaMail plugins supports multiple protocols,\nby virtue of using JavaMail library, but only SMTP will be used\nhere."),(0,r.kt)("h2",{id:"authguard-configuration"},"AuthGuard Configuration"),(0,r.kt)("p",null,"Unlike other functionalities, sending emails and text messages,\nspans multiple components, and therefore require configuring\neach one independently."),(0,r.kt)("h3",{id:"event-message-bus"},"Event Message Bus"),(0,r.kt)("p",null,"AuthGuard has an internal message bus which allows components\nto publish events for other ones to consume. This gives it a\nlot of flexibility but it also requires its own configuration.\nThe EMB requires channels and subscribers to be explicitly\nallowed, which is meant to control which messages are allowed\nto be published, and which subscribers are allowed to listen\nto them."),(0,r.kt)("p",null,"Since we only need to send passwordless tokens, we will only\nallow that."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"emb:\n   subscribers:\n      - com.nexblocks.authguard.external.email.subscribers.EmailPasswordlessSubscriber\n   channels:\n      - passwordless\n")),(0,r.kt)("h3",{id:"external-communication-channel"},"External Communication Channel"),(0,r.kt)("p",null,"The second part which sending emails spans is the external\ncommunication channel. This locks which communications\nchannels will be allowed, if any. This one is straightforward,\nand we will only allow emails."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"external:\n   email: true\n")),(0,r.kt)("h3",{id:"javamail-plugin"},"JavaMail Plugin"),(0,r.kt)("p",null,"The third and final part of the puzzle is the JavaMail plugin\nitself, which will call the SMTP server to send emails. The\nplugin configuration itself is split into two parts: provider,\nand JavaMail. The provider part is for configuration exclusive\nto the provider built on top of JavaMail, while the other part\nis for configuting JavaMail itself. This gives the flexibility\nto configure the underlying directly as needed."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},'mail:\n   provider:\n      username: apikey # SendGrid requires the username to be \'apikey\' when using API keys\n      password: "env:SENDGRID_KEY" # this will load it from environment variables\n      fromAddress: noreply@yourwebsite.com # must be verified with SendGrid\n      fromName: AuthGuard Tutorials\n      templates:\n         passwordless:\n            file: emails/passwordless.hbs\n            subject: Login Link\n   javaMail:\n      "mail.smtp.host": smtp.sendgrid.net\n      "mail.smtp.port": 465\n      "mail.debug": true # set to false for production\n      "mail.smtp.auth": true # required to enable authentication\n      "mail.smtp.ssl.enable": true\n')),(0,r.kt)("p",null,"Most of the configuration parameters are explained in the comments\nabove, but we need to clarify the role of ",(0,r.kt)("inlineCode",{parentName:"p"},"templates"),". JavaMail\nplugin requires email templates to be provided for each email type.\nThere is no pre-defined set of types, those are set by whichever\ncalls the email provider. You need to know those types and map\nthem to templates."),(0,r.kt)("p",null,"As for the templates themselves, they are just basic handlebars\ntemplates. AuthGuard will not read the templates from a database,\nand a file path is required."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"javaMail")," part of the configuration is free-form key-value\npairs. All properties defined here are passed to JavaMail as is.\nRefer to JavaMail documentation to learn more about its configuration."),(0,r.kt)("h2",{id:"test-email"},"Test Email"),(0,r.kt)("p",null,"To trigger that email, all you need to do is trigger a passwordless\nlogin. Simply send a POST request to ",(0,r.kt)("inlineCode",{parentName:"p"},"/auth/exchange?from=basic&to=passwordless"),"\nwith the following body"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "identifier": "<user identifier>"\n}\n')),(0,r.kt)("p",null,"An email will be sent to the primary email address of the account\nassociated with that identifier. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n   "email": {\n      "email": "<user email>"\n   }\n}\n')),(0,r.kt)("h2",{id:"using-third-party-api"},"Using Third-Party API"),(0,r.kt)("p",null,"It is also possible to send emails using third-party APIs\ninstead of using standard protocols such as SMTP. We can\nachieve the same result by using SendGrid plugin. If you\nwish to use a custom provider then you will need to remove\nthe standard one; only one email provider can be used."),(0,r.kt)("p",null,"The configuration in that case will be something like:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yaml"},"sendgrid:\n   apiKeyVariable: SENDGRID_KEY\n   fromEmailAddress: noreply@yourwebsite.com\n   emailTemplates:\n      passwordless: id_of_sendgrid_template\n")),(0,r.kt)("p",null,"Here we no longer maintain the templates, and we just\nreference templates created on SendGrid directly."),(0,r.kt)("h2",{id:"text-messages"},"Text Messages"),(0,r.kt)("p",null,"Unlike emails, there is no universal, or standard, way\nto send text messages. As a result, reliance on third-party\nAPIs is required. To send text messages, you will have\nto create your own plugin which use whatever external service\nyou need. You can use the SendGrid plugin as a starting\npoint."))}p.isMDXComponent=!0}}]);