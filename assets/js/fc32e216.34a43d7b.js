(self.webpackChunkdocusaurus_test=self.webpackChunkdocusaurus_test||[]).push([[3170],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),d=s(n),f=o,m=d["".concat(c,".").concat(f)]||d[f]||l[f]||i;return n?r.createElement(m,a(a({ref:t},p),{},{components:n})):r.createElement(m,a({ref:t},p))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5068:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return l}});var r=n(2122),o=n(9756),i=(n(7294),n(3905)),a=["components"],u={sidebar_position:6},c={unversionedId:"extend/routes",id:"extend/routes",isDocsHomePage:!1,title:"API Routes",description:"Beside the pre-defined API endpoints, extensions can bring their own routes",source:"@site/docs/extend/routes.md",sourceDirName:"extend",slug:"/extend/routes",permalink:"/docs/extend/routes",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/extend/routes.md",version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Bootstrap Steps",permalink:"/docs/extend/bootstrap"},next:{title:"Bridge to Kafka",permalink:"/docs/extend/cases/kafka"}},s=[{value:"Implementing API Route",id:"implementing-api-route",children:[]}],p={toc:s};function l(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Beside the pre-defined API endpoints, extensions can bring their own routes\nas well. "),(0,i.kt)("h2",{id:"implementing-api-route"},"Implementing API Route"),(0,i.kt)("p",null,"AuthGuard uses Javalin as its web library. Familiarize yourself with Javalin\nroute handler to know about them. Once you are ready, you can easily define\nyou own API routes by implementing the ",(0,i.kt)("inlineCode",{parentName:"p"},"ApiRoute")," interface."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-java"},'public class OAuthRoute implements ApiRoute {\n    private final OAuthService oAuthService;\n\n    @Inject\n    public OAuthRoute(final OAuthService oAuthService) {\n        this.oAuthService = oAuthService;\n    }\n\n    @Override\n    public String getPath() {\n        return "custom"; // the root path (must be a single part, can\'t be custom/other for example)\n    }\n\n    @Override\n    public void addEndpoints() {\n        get("/my/endpoint", this::endpointHandler);\n    }\n\n    void endpointHandler(final Context context) {\n        // process request\n    }\n}\n')),(0,i.kt)("p",null,"The endpoint will be available on the path ",(0,i.kt)("inlineCode",{parentName:"p"},"GET /custom/my/endpoint"),"."))}l.isMDXComponent=!0}}]);